#! /usr/bin/env bash

# DESCRIPTION
# Post-install script for whisper-stream package

# Post-install script for whisper-stream

# CONSTANTS
readonly PACKAGE_NAME="whisper-stream"
readonly CONFIG_DIR="/etc/$PACKAGE_NAME"
readonly USER_CONFIG_DIR="$HOME/.config/$PACKAGE_NAME"

# FUNCTIONS
print_info() {
    printf "\n==> %s\n" "$1"
}

print_note() {
    printf "\n:: %s\n" "$1"
}

# INSTALLATION
post_install() {
    print_info "whisper-stream installation complete"
    
    print_note "Configuration:"
    printf "  - Example config: %s/config.example\n" "$CONFIG_DIR"
    printf "  - User config: %s/config\n" "$USER_CONFIG_DIR"
    
    print_note "Getting started:"
    printf "  1. Set your Groq API key: export GROQ_API_KEY='your-key-here'\n"
    printf "  2. Run: whisper-stream\n"
    printf "  3. Follow the interactive prompts\n"
    
    print_note "Documentation:"
    printf "  - README: /usr/share/doc/%s/README.md\n" "$PACKAGE_NAME"
    printf "  - Development guide: /usr/share/doc/%s/CLAUDE.md\n" "$PACKAGE_NAME"
}

# UPGRADE
post_upgrade() {
    print_info "whisper-stream upgraded successfully"
    
    print_note "Check for new configuration options in:"
    printf "  %s/config.example\n" "$CONFIG_DIR"
}

# PRE-REMOVAL
pre_remove() {
    print_info "Removing whisper-stream..."
    
    # Stop any running whisper-stream processes
    if pgrep -f "whisper-stream" >/dev/null; then
        print_note "Stopping running whisper-stream processes..."
        pkill -f "whisper-stream" || true
    fi
    
    # Clean up temporary files
    if [[ -d "/tmp" ]]; then
        rm -f /tmp/whisper-stream-*.log 2>/dev/null || true
        rm -rf /tmp/.tmp.gum_* 2>/dev/null || true
        rm -f /tmp/whisper-stream-*.wav 2>/dev/null || true
        rm -f /tmp/test_audio.* 2>/dev/null || true
    fi
    
    # Clean up any auto-installed gum binary if it was installed by whisper-stream
    if [[ -f "/usr/local/bin/gum" ]] && [[ -f "/tmp/.whisper-stream-gum-installed" ]]; then
        print_note "Removing auto-installed gum binary..."
        rm -f /usr/local/bin/gum 2>/dev/null || true
        rm -f /tmp/.whisper-stream-gum-installed 2>/dev/null || true
    fi
    
    # Clean up any cached downloads
    if [[ -d "/tmp/whisper-stream-cache" ]]; then
        rm -rf /tmp/whisper-stream-cache 2>/dev/null || true
    fi
}

# REMOVAL
post_remove() {
    print_info "whisper-stream removed"
    
    # Final cleanup of any remaining temporary files
    rm -f /tmp/whisper-stream-error.log 2>/dev/null || true
    rm -f /tmp/.whisper-stream-* 2>/dev/null || true
    
    # Check if any files remain in expected locations and warn
    local remaining_files=()
    
    if [[ -f "/usr/bin/whisper-stream" ]]; then
        remaining_files+=("/usr/bin/whisper-stream")
    fi
    
    if [[ -d "/usr/share/whisper-stream" ]]; then
        remaining_files+=("/usr/share/whisper-stream/")
    fi
    
    if [[ -d "/etc/whisper-stream" ]]; then
        remaining_files+=("/etc/whisper-stream/")
    fi
    
    if [[ ${#remaining_files[@]} -gt 0 ]]; then
        print_note "Warning: Some files may not have been removed:"
        printf "  %s\n" "${remaining_files[@]}"
        print_note "You may need to remove them manually"
    fi
    
    print_note "User configuration preserved in:"
    printf "  %s/\n" "$USER_CONFIG_DIR"
    
    print_note "To completely remove all data, run:"
    printf "  rm -rf %s\n" "$USER_CONFIG_DIR"
}