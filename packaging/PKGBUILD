# Maintainer: b08x <b08x@users.noreply.github.com>
pkgname=whisper-stream
pkgver=2.1.2
pkgrel=1
pkgdesc="Continuous speech-to-text transcription using Groq API with interactive UI"
arch=('any')
url="https://github.com/b08x/whisper-stream"
license=('MIT')
depends=('curl' 'jq' 'sox' 'bash>=4.0')
optdepends=('wl-clipboard: for Wayland clipboard support (recommended)'
            'xclip: for X11 clipboard support (fallback)'
            'xsel: alternative X11 clipboard tool'
            'pulseaudio: for audio device selection on Linux'
            'alsa-utils: alternative audio system support'
            'gum: for enhanced interactive UI (auto-installed if not present)')
makedepends=('git')
provides=('whisper-stream')
conflicts=('whisper-stream')
backup=('etc/whisper-stream/config.example')
install="$pkgname.install"
source=("$pkgname-$pkgver.tar.gz::https://github.com/b08x/whisper-stream/archive/v$pkgver.tar.gz")
sha256sums=('SKIP')

prepare() {
    cd "$pkgname-$pkgver"
    
    # Update shebang to use env
    sed -i '1s|#!/bin/bash|#! /usr/bin/env bash|' whisper-stream
    
    # Update shebang for lib files
    for lib_file in lib/*.sh; do
        if [[ -f "$lib_file" ]]; then
            sed -i '1s|#!/bin/bash|#! /usr/bin/env bash|' "$lib_file"
        fi
    done
    
    # Update shebang for scripts files
    for script_file in scripts/*.sh; do
        if [[ -f "$script_file" ]]; then
            sed -i '1s|#!/bin/bash|#! /usr/bin/env bash|' "$script_file"
        fi
    done
}

package() {
    cd "$pkgname-$pkgver"
    
    # Create directories following FHS and bashsmith patterns
    install -d "$pkgdir/usr/bin"
    install -d "$pkgdir/usr/share/$pkgname"
    install -d "$pkgdir/usr/share/$pkgname/lib"
    install -d "$pkgdir/usr/share/$pkgname/scripts"
    install -d "$pkgdir/usr/share/doc/$pkgname"
    install -d "$pkgdir/usr/share/licenses/$pkgname"
    install -d "$pkgdir/etc/$pkgname"
    
    # Install main executable (following bashsmith bin/ pattern)
    install -m755 whisper-stream "$pkgdir/usr/bin/whisper-stream"
    
    # Install library modules (following bashsmith lib/ pattern)
    for lib_file in lib/*.sh; do
        if [[ -f "$lib_file" ]]; then
            install -m644 "$lib_file" "$pkgdir/usr/share/$pkgname/lib/"
        fi
    done
    
    # Install scripts directory
    for script_file in scripts/*.sh; do
        if [[ -f "$script_file" ]]; then
            install -m755 "$script_file" "$pkgdir/usr/share/$pkgname/scripts/"
        fi
    done
    
    # Install configuration files
    install -m644 docs/dictionary.md "$pkgdir/usr/share/$pkgname/"
    
    # Create example configuration file
    cat > "$pkgdir/etc/$pkgname/config.example" << 'EOF'
# whisper-stream configuration file
# Copy this to ~/.config/whisper-stream/config and customize

# Groq API settings
GROQ_API_KEY=your_api_key_here
MODEL=whisper-large-v3-turbo

# Audio settings
MIN_VOLUME=1%
SILENCE_LENGTH=1.5

# Paths
NOTEBOOK_ROOT=$HOME/Notebooks
OUTPUT_DIR=

# Device settings (leave empty to prompt)
SELECTED_INPUT_DEVICE=
EOF
    
    # Install documentation
    install -m644 README.md "$pkgdir/usr/share/doc/$pkgname/"
    install -m644 docs/CLAUDE.md "$pkgdir/usr/share/doc/$pkgname/"
    
    # Install license
    install -m644 LICENSE "$pkgdir/usr/share/licenses/$pkgname/"
    
    # Remove the bashsmith strict settings that cause unbound variable errors
    sed -i '/# Bashsmith template patterns for safety/,/IFS=.*$/d' "$pkgdir/usr/bin/whisper-stream"
    
    # Remove bashsmith patterns from lib files too
    for lib_file in "$pkgdir/usr/share/$pkgname/lib"/*.sh; do
        if [[ -f "$lib_file" ]]; then
            sed -i '/# Bashsmith template patterns for safety/,/IFS=.*$/d' "$lib_file"
        fi
    done
    
    # Remove bashsmith patterns from scripts files
    for script_file in "$pkgdir/usr/share/$pkgname/scripts"/*.sh; do
        if [[ -f "$script_file" ]]; then
            sed -i '/# Bashsmith template patterns for safety/,/IFS=.*$/d' "$script_file"
        fi
    done
}